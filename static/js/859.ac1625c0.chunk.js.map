{"version":3,"file":"static/js/859.ac1625c0.chunk.js","mappings":"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","sources":["components/useDocumentTitle.jsx","pages/home/createPost.jsx","pages/home/uploadFiles.jsx","pages/home/allPosts..jsx","pages/home/post.jsx","pages/home/Home.jsx"],"sourcesContent":["import { useEffect } from \"react\"\r\n\r\nexport const useDocumentTitle = (docName) => {\r\n    useEffect(() => {\r\n        document.title = docName\r\n    }, [docName])\r\n}","import * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { addDoc, collection, serverTimestamp } from 'firebase/firestore';\r\nimport { auth, db } from '../../firebase/firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nexport const CreatePost = () => {\r\n    const [user] = useAuthState(auth)\r\n\r\n    const schema = yup.object().shape({\r\n        'description': yup.string().required(\"You Must Add A Description\")\r\n    })\r\n\r\n    const { register, handleSubmit, formState: {errors} } = useForm({\r\n        resolver: yupResolver(schema)\r\n    })\r\n\r\n    const postRef = collection(db, \"posts\")\r\n    \r\n    const submitForm = async (data) => {\r\n        await addDoc(postRef, {\r\n            ...data,\r\n            userProfilePhoto: user?.photoURL,\r\n            username: user?.displayName,\r\n            userId: user?.uid,\r\n            postUploadedTime: serverTimestamp()\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(submitForm)} className=\"create-new-post\">\r\n                <img className='writeIcon' src=\"https://cdn-icons-png.flaticon.com/512/1159/1159633.png\" alt=\"createPost\" />\r\n                <textarea placeholder='Type something...' {...register('description')}/>\r\n                <button type=\"submit\">Upload</button>\r\n            </form>\r\n            <p style={{ color: \"red\", fontSize: \"17px\" , textAlign:\"center\" }}>{errors?.description?.message}</p>\r\n        </div>\r\n    )\r\n}","export const UploadFiles = ({iconFunction, fileType, img, span}) => {\r\n    return (\r\n        <div onClick={iconFunction ? iconFunction : null} className={`upload upload${fileType}`}>\r\n            <img src={img} alt={fileType}/>\r\n            <span>{span}</span>\r\n        </div>\r\n    )\r\n}","import { addDoc, collection, deleteDoc, doc, getDocs, query, where } from \"firebase/firestore\"\r\nimport { useState } from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { useAuthState } from \"react-firebase-hooks/auth\"\r\nimport { auth, db } from \"../../firebase/firebase\"\r\nimport { UploadFiles } from \"./uploadFiles\"\r\n\r\nexport const AllPosts = (props) => {\r\n    const post = props.post\r\n    const [user] = useAuthState(auth);\r\n    const [likes, setLikes] = useState([])\r\n    \r\n    const likesRef = collection(db, \"likes\")\r\n    \r\n    const likesDoc = query(likesRef, where(\"postId\", \"==\", post.id))\r\n\r\n    const getLikes = async () => {\r\n        const data = await getDocs(likesDoc);\r\n        setLikes(data.docs.map(doc => ({ userId: doc.data().userId })));\r\n    }\r\n\r\n    const addLike = async () => {\r\n        await addDoc(likesRef, {\r\n            userId: user?.uid,\r\n            postId: post.id\r\n        })\r\n        getLikes()\r\n    }\r\n\r\n    const deleteLike = async () => {\r\n        const likeToDeleteQuery = query(likesRef, where(\"postId\", \"==\", post.id), where(\"userId\", \"==\", user?.uid));\r\n        const getLikeToDelete = await getDocs(likeToDeleteQuery)\r\n        const likeToDeleteDoc = doc(db, \"likes\", getLikeToDelete.docs[0].id);\r\n        await deleteDoc(likeToDeleteDoc)\r\n        getLikes()\r\n    }\r\n\r\n    const hasUserLiked = likes?.find(like => like.userId === user?.uid)\r\n\r\n    useEffect(() => {\r\n        getLikes()\r\n    },[])\r\n    return (\r\n        <div className='allPosts'>\r\n            <div className='postHeader'>\r\n                <img src={post?.userProfilePhoto} alt={post?.displayName} />\r\n                <div className='postHeader-body'>\r\n                    <h3>{post?.username}</h3>\r\n                    {/* <p>{post?.postUploadedTime.seconds}</p> */}\r\n                </div>\r\n            </div>\r\n            <div className='postBody'>\r\n\r\n                <p>{post?.description}</p>\r\n            </div>\r\n            <p id=\"likesAmount\">Likes: {likes.length}</p>\r\n            <div className=\"postFooter\">\r\n                <UploadFiles iconFunction={hasUserLiked ? deleteLike : addLike} fileType='like' img={hasUserLiked ? \"https://cdn-icons-png.flaticon.com/512/1076/1076984.png\" : \"https://cdn-icons-png.flaticon.com/512/1077/1077035.png\"} span={hasUserLiked ? \"Unlike\" : \"Like\"}/>\r\n                <UploadFiles fileType='comment' img=\"https://cdn-icons-png.flaticon.com/512/1380/1380338.png\" span=\"Comment\"/>\r\n                <UploadFiles fileType='like' img=\"https://cdn-icons-png.flaticon.com/512/2958/2958783.png\" span=\"Share\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { collection, getDocs, orderBy, query } from 'firebase/firestore'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport {  db } from '../../firebase/firebase'\r\nimport '../../styles/post.css'\r\nimport { AllPosts } from './allPosts.'\r\n\r\nexport const Post = () => {\r\n    const [posts, setPosts] = useState([])\r\n\r\n    const postsRef = collection(db, \"posts\");\r\n\r\n    const getPostsRef = query(postsRef, orderBy(\"postUploadedTime\", \"desc\"))\r\n    \r\n\r\n    useEffect(() => {\r\n        const getPosts = async () => {\r\n            const data = await getDocs(getPostsRef);\r\n            setPosts(data?.docs.map(doc => ({...doc.data(), id: doc.id})))\r\n        }\r\n        \r\n        getPosts()\r\n    }, [getPostsRef, posts])\r\n    return (\r\n        <>\r\n            {posts.map((post, key) => {\r\n                return (\r\n                    <AllPosts key={key} post={post}/>\r\n                    )\r\n            })}\r\n        </>\r\n    )\r\n}","import { auth } from '../../firebase/firebase';\r\nimport '../../styles/home.css'\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { CreatePost } from './createPost';\r\nimport { UploadFiles } from './uploadFiles';\r\nimport { Post } from './post';\r\nimport { useDocumentTitle } from '../../components/useDocumentTitle';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    const [user] = useAuthState(auth)\r\n    const navigate = useNavigate(null)\r\n\r\n    useDocumentTitle(\"Home\")\r\n\r\n    return (\r\n        <div className=\"home\" style={{ flex: user ? 0.6 : 1 }}>\r\n            {user ?\r\n            <div className='homePosts'>\r\n                <div className='postCreate'>\r\n                    <CreatePost />\r\n                    <div className='uploadFiles'>\r\n                        <UploadFiles fileType={\"Image\"} img=\"https://cdn-icons-png.flaticon.com/512/833/833281.png\" span=\"Photo\"/>\r\n                        <UploadFiles fileType={\"Video\"} img=\"https://cdn-icons-png.flaticon.com/512/1179/1179069.png\" span=\"Video\"/>\r\n                        <UploadFiles fileType={\"Event\"} img=\"https://cdn-icons-png.flaticon.com/512/2693/2693646.png\" span=\"Event\"/>\r\n                        <UploadFiles fileType={\"Article\"} img=\"https://cdn-icons-png.flaticon.com/512/2696/2696555.png\" span=\"Article\"/>\r\n                    </div>\r\n                </div>\r\n                <div className='posts'>\r\n                    <Post />\r\n                </div>\r\n            </div>\r\n            :\r\n\r\n            <div>\r\n                <h1 onClick={() => navigate('/login')}>Go To Log In Page</h1>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home"],"names":["useDocumentTitle","docName","useEffect","document","title","CreatePost","useAuthState","auth","user","schema","yup","shape","required","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","postRef","collection","db","submitForm","data","addDoc","userProfilePhoto","photoURL","username","displayName","userId","uid","postUploadedTime","serverTimestamp","onSubmit","className","src","alt","placeholder","type","style","color","fontSize","textAlign","description","message","UploadFiles","iconFunction","fileType","img","span","onClick","AllPosts","props","post","useState","likes","setLikes","likesRef","likesDoc","query","where","id","getLikes","getDocs","docs","map","doc","addLike","postId","deleteLike","likeToDeleteQuery","getLikeToDelete","likeToDeleteDoc","deleteDoc","hasUserLiked","find","like","length","Post","posts","setPosts","postsRef","getPostsRef","orderBy","getPosts","key","navigate","useNavigate","flex"],"sourceRoot":""}